// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// yarn prisma migrate dev

model Servico {
  id   String @id @default(uuid())
  nome String

  regiao   Regiao @relation(fields: [regiaoID], references: [id])
  regiaoID String

  profissional Profissional[]

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  @@map("servicos")
}

model Profissional {
  id            String   @id @default(uuid())
  nome          String
  avatar        Json
  portfolio     Json[]
  listaServicos String[]
  whatsapp      String   @unique
  email         String   @unique
  aDomicilio    Boolean  @default(false)
  endereco      String
  bio           String
  statusGuia    Boolean  @default(false)

  servico   Servico @relation(fields: [servicoID], references: [id])
  servicoID String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  @@map("profissionais")
}

model Loja {
  id         String   @id @default(uuid())
  email      String   @unique
  senha      String
  avatar     Json?
  statusGuia Boolean? @default(false)
  nome       String?
  bio        String?
  endereco   String?
  bairro     String?
  referencia String?
  latlng     Json?
  entrega    Boolean? @default(false)

  produtos   Produto[]
  vendedores Vendedor[]

  tema   Temas?  @relation(fields: [temaID], references: [id])
  temaID String?

  regiao   Regiao @relation(fields: [regiaoID], references: [id])
  regiaoID String

  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @default(now())
  Campanha   Campanha? @relation(fields: [campanhaId], references: [id])
  campanhaId String?

  @@map("lojas")
}

model Vendedor {
  id String @id @default(uuid())

  avatar   Json
  nome     String
  whatsapp String @unique
  setor    String

  loja   Loja   @relation(fields: [lojaID], references: [id])
  lojaID String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  @@map("vendedores")
}

model Produto {
  id        String   @id @default(uuid())
  cod       String?
  nome      String
  descricao String
  preco     String
  oferta    String?
  tamanho   String[]
  imagens   Json[]

  loja   Loja   @relation(fields: [lojaID], references: [id])
  lojaID String

  categoria   Categoria @relation(fields: [categoriaID], references: [id])
  categoriaID String

  campanha   Campanha? @relation(fields: [campanhaID], references: [id])
  campanhaID String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  @@map("produtos")
}

model Campanha {
  id   String @id @default(uuid())
  nome String
  tema String
  status Boolean @default(false)

  Produto Produto[]
  Loja    Loja[]

  @@map("campanhas")
}

model Categoria {
  id   String @id @default(uuid())
  nome String

  produto Produto[]

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  @@map("categorias")
}

model Regiao {
  id   String @id @default(uuid())
  nome String

  loja    Loja[]
  servico Servico[]

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())

  @@map("regioes")
}

model Temas {
  id    String   @id @default(uuid())
  cores String[]

  loja Loja[]

  @@map("temas")
}
